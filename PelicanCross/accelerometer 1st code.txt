package com.example.pelicancross;


import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.os.SystemClock;
import android.view.View;
import android.widget.TextView;
import android.widget.Chronometer;


public class Accelerometer extends MainActivity implements SensorEventListener {

	private float lastY;
	private SensorManager sensorManager;
	private Sensor accelerometer;
	private float deltaY = 0;
	
	Chronometer chronometer;

		
	//Text views from accelerometer.xml
	private TextView currentY, sumDisplay;
		
	//Estimating acceleration by sum
	private float sum;

	@Override
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
			
		setContentView(R.layout.accelerometer);
		

		initializeViews();
		
		  
			
		//Sensor for the accelerometer
		sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
		accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
		sensorManager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);
					
	}


		
	public void initializeViews() {
		currentY = (TextView) findViewById(R.id.currentY);
		sumDisplay = (TextView) findViewById(R.id.sumDisplay);
	}

	//onResume() register the accelerometer for listening the events
	protected void onResume() {
		super.onResume();
		sensorManager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);
	}

	//onPause() unregister the accelerometer for stop listening the events
	protected void onPause() {
		super.onPause();
		sensorManager.unregisterListener(this);
	}

	@Override
	public void onAccuracyChanged(Sensor sensor, int accuracy) {
		
	}

	@Override
	public void onSensorChanged(SensorEvent event) {	 
   
			
		// get the change of the y values of the accelerometer
	
		deltaY = Math.abs(lastY - event.values[1]);
		

		// if the change is below 2, it is just plain noise
		if (deltaY < 2)
			deltaY = 0;
		
		// set the last know values of y
		lastY = event.values[1];
		
		
		
		displayCurrentValues();
		

			
	}

	
// display the current x,y,z accelerometer values
	public void displayCurrentValues() {
		
		 
		currentY.setText(Float.toString(deltaY));
		sumDisplay.setText(Float.toString(sum));
		
		

		
	}
	
	@Override
    public void onClick(View v) {
           Object chronometer;
		switch(v.getId()) {
           case R.id.start_button:
                  chronometer.setBase(SystemClock.elapsedRealtime());
                  chronometer.start();
                  break;
          case R.id.stop_button:
                 chronometer.stop();
                 break;
          }
   }

}
